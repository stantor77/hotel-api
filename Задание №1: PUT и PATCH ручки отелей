import uvicorn
from fastapi import FastAPI, Query, Body, Path
from fastapi import HTTPException
app = FastAPI() # создаем ЭК


hotels = [
     {"id": 1, "title": "Sochi", "name": ""},
     {"id": 2, "title": "Дубай", "name": ""},
 ]

@app.put("/hotels/{hotel_id}")
def full_update_hotels(
    hotel_id: int = Path(description="ID отеля"),  # Используем Path для параметра в URL
    title: str = Body(..., description="Название отеля"),  # Обязательный параметр
    name: str = Body(..., description="Имя отеля"),  # Обязательный параметр
):
    # Поиск отеля по ID
    hotel_to_update = next((hotel for hotel in hotels if hotel["id"] == hotel_id), None)

    # Если отель не найден, возвращаем 404
    if not hotel_to_update:
        raise HTTPException(status_code=404, detail="Отель не найден")

    # Обновляем данные отеля
    hotel_to_update["title"] = title
    hotel_to_update["name"] = name

    return {"status": "OK", "updated_hotel": hotel_to_update}


@app.patch("/hotels/{hotel_id}")
def partial_update_hotel(
    hotel_id: int = Path(description="ID отеля"),  # Используем Path для параметра в URL
    title: str = Body(None, description="Название отеля"),  # Обязательный параметр
    name: str = Body(None, description="Имя отеля"),  # Обязательный параметр
):
    # Поиск отеля по ID
    hotel_to_update = next((hotel for hotel in hotels if hotel["id"] == hotel_id), None)

    # Если отель не найден, возвращаем 404
    if not hotel_to_update:
        raise HTTPException(status_code=404, detail="Отель не найден")

    # Обновляем только те поля, которые переданы
    if title is not None:
        hotel_to_update["title"] = title
    if name is not None:
        hotel_to_update["name"] = name

    print(hotels)

    return {"status": "OK", "updated_hotel": hotel_to_update}
